from releases import common_data

def generate_romset(input_dir, output_dir):
    from releases.symbian_demo.symbian2romset import SymbianDemoROMSet

    # TODO: validate checksums of the original files

    romset = SymbianDemoROMSet(input_dir, output_dir)
    romset.generate()
    
    # TODO: validate checksums of generated ROM set
    #       according to the checksums listed below


MD5_CHECKSUMS = {
    # TODO
    #'bytecode.rom': '',
    #'cinematic.rom': '',
    #'palettes.rom': '',
    #'str_data.rom': '',
    #'str_index.rom': '',
    #'video2.rom': ''
}

POSSIBLY_UNUSED_CODEBLOCKS = {
    1: [0x00BD, 0x01DA, 0x0502
    ],
}

KNOWN_LABELS = {
    1: {
      0x00BB: "KILL_CHANNEL_ROUTINE",
      0x00BC: "THERE_IS_NO_COPY_PROTECTION_HERE",
      0x00BD: "LIKELY_A_COPY_PROTECTION_MECHANISM",
      0x00DC: "SHUTDOWN_VM",
      0x00E5: "SOME_VIDEO_BUFFER_MAGIC",
      0x01BC: "WEIRD_VIDEO_BUFFER_MANIPULATION",
      0x01C7: "ANOTHER_UNCLEAR_VIDEO_BUFFER_MANIPULATION",
      0x01E2: "UNCLEAR_VIDEO_BUFFER_MANIPULATION", 
      0x0218: "INIT_VIDEO_BUFFERS",
      0x16BC: "REED_PLANT_ANIMATION",
      0x1767: "SNEAKY_TENTACLE_FROM_THE_POOL",
      0x1785: "SNEAKY_TENTACLE_GOING_UP",
      0x1921: "SNEAKY_TENTACLE_GIVES_UP_FOR_NOW",
      0x1929: "SNEAKY_TENTACLE_GOING_DOWN",
      0x1A44: "VINE_SCREEN",
      0x1A8C: "OUTSIDE_POOL_SCREEN",
      0x1AEE: "FIRST_SCREEN_TO_THE_RIGHT",
      0x1BCC: "SECOND_SCREEN_TO_THE_RIGHT",
      0x1C40: "THIRD_SCREEN_TO_THE_RIGHT",
      0x1ECA: "THE_BEAST_KILLS_LESTER",
      0x1FDF: "A_VIDEO_ROUTINE_OF_SOME_SORT",
      0x20C5: "LESTER_GRABS_A_VINE_AND_SWINGS",
      0x22E4: "GETTING_OUT_OF_THE_POOL__ANIMATION_PART_0",
      # TODO: continue mapping from this address.
      0x2565: "THE_BEAST_APPEARS_FOR_THE_FIRST_TIME_IN_THE_BACKGROUND",
      0x26BB: "THE_BEAST_WANDERS_ON_THE_FIRST_SCREEN_TO_THE_RIGHT",
      0x279D: "THE_BEAST_WANDERS_ON_THE_SECOND_SCREEN_TO_THE_RIGHT",
      0x3B8C: "DRAW_SCENARIO_OF_VINE_SCREEN",
      0x3BA6: "DRAW_SCENARIO_OF_SECOND_SCREEN_TO_THE_RIGHT",
      0x3BD3: "DRAW_SCENARIO_OF_THIRD_SCREEN_TO_THE_RIGHT",
      0x3C01: "DRAW_SCENARIO_OF_FIRST_SCREEN_TO_THE_RIGHT",
      0x3C37: "DRAW_OUTSIDE_POOL_SCENARIO",
      0x3C81: "DRAW_INSIDE_ALIEN_POOL_SCENARIO",
      0x3CD9: "A_CALM_ALIEN_POOL_BEFORE_LESTERS_ARRIVAL",
      0x3E44: "SETUP_TENTACLE_ANIMATIONS",
      0x409C: "POOL_WATER_WAVY_GLARE_ANIMATION",
      0x40D1: "UPDATE_POSITION_OF_SECOND_WAVY_GLARE",
      0x40F7: "UPDATE_POSITION_OF_FIRST_WAVY_GLARE",
      0x4111: "SWIMMING_UP_TORSO_ANIMATION",
      0x412D: "BUBBLES_A_ANIMATION",
      0x4165: "BUBBLES_B_ANIMATION",
      0x4187: "SWIMMING_UP_LEGS_ANIMATION",
      0x41BB: "LAB_CONSOLE_SINKING_ANIMATION",
      0x4254: "SINKING_AT_CONSOLE",
      0x4267: "SWIMMING_UP",
      0x4290: "UPDATE_POSITION_OF_BUBBLES",
    }
}

LABELED_CINEMATIC_ENTRIES = {
  0: common_data.LABELED_CINEMATIC_ENTRIES.get(1, []),
  1: common_data.LABELED_CINEMATIC_ENTRIES.get(2, []),
  2: common_data.LABELED_CINEMATIC_ENTRIES.get(3, []),
  3: common_data.LABELED_CINEMATIC_ENTRIES.get(4, []),
  4: common_data.LABELED_CINEMATIC_ENTRIES.get(5, []),
  5: common_data.LABELED_CINEMATIC_ENTRIES.get(6, []),
  6: common_data.LABELED_CINEMATIC_ENTRIES.get(7, []),
  7: common_data.LABELED_CINEMATIC_ENTRIES.get(8, []),
}
